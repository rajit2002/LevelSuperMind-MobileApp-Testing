package LevelSuperMind;

import java.net.MalformedURLException;
import java.util.concurrent.TimeUnit;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;
import LevelSuperMind_cap.cap_LevelSuperMind;
import io.appium.java_client.MobileBy;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.AndroidElement;

public class LoginFunctionalityTest extends cap_LevelSuperMind {

    public AndroidDriver<AndroidElement> driver;

    // Setup method to initialize the driver
    @BeforeTest
    public void setup() throws MalformedURLException {
        driver = cap();
        
        // Set 'noReset' to true in capabilities to prevent app reset
        driver.manage().timeouts().implicitlyWait(50, TimeUnit.SECONDS);
    }

    // Positive test case for the login functionality
    @Test
    public void testPositiveLogin() throws InterruptedException {
        // Step 1: Validate that the app has launched
        System.out.println("Level Super Mind app launched...");

        // Step 2: Wait explicitly for the app to load
        Thread.sleep(30000);  // Adjusted wait time

        // Step 3: Attempt to find and click the "Sign" button
        driver.findElement(MobileBy.className("android.widget.Button")).click();
        System.out.println("Clicked on the 'Sign' button...");

        // Step 4: Click on the "Email" option for login
        driver.findElement(MobileBy.xpath("//android.widget.TextView[@text='Email']")).click();
        System.out.println("Clicked on the 'Email' option...");

        // Step 5: Enter a valid email address
        driver.findElement(MobileBy.className("android.widget.EditText")).sendKeys("rajitgautam2002@gmail.com");
        System.out.println("Entered the email address...");

        // Step 6: Click on the "Proceed" button to continue
        driver.findElement(MobileBy.xpath("//androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[2]")).click();
        System.out.println("Clicked on the 'Proceed' button...");

        // Step 7: Switch to the Gmail app to retrieve the OTP
        System.out.println("Switching to Gmail to retrieve OTP...");
        driver.activateApp("com.google.android.gm");  // Replace with Gmail package ID if different
        Thread.sleep(3000);
        
        // Step 8: Find the OTP email and extract the OTP (example assumes OTP is in an email subject line)
        driver.findElement(MobileBy.xpath("//android.widget.TextView[@resource-id='com.google.android.gm:id/subject' and @text='Verification E-mail for Level App']")).click();
        System.out.println("Clicked on the email with subject 'Verification E-mail for Level App'");
        Thread.sleep(4000);

        // Find the TextView that contains the OTP (assuming it is a 6-digit number)
        String otpText = driver.findElement(MobileBy.xpath("//android.widget.TextView[contains(@text, 'Hey, Please use the verification code')]")).getText();
        
        // Extract the 6-digit OTP from the text using regex
        Pattern otpPattern = Pattern.compile("\\b\\d{6}\\b");
        Matcher matcher = otpPattern.matcher(otpText);

        String otpCode = "";
        if (matcher.find()) {
            otpCode = matcher.group(0); // This captures the OTP
            System.out.println("Extracted OTP: " + otpCode);
        }
        
        // Step 9: Switch back to your app without resetting its state
        driver.activateApp("level.game");  // Replace with your app's package name

        // Step 10: Directly locate the OTP input field and paste the OTP
        driver.findElement(MobileBy.className("android.widget.EditText")).sendKeys(otpCode);
        System.out.println("OTP entered in the app.");
        
        // Step 11: Click on the 'Proceed' button to log in
        driver.findElement(MobileBy.xpath("//androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[2]")).click();
        System.out.println("Clicked on the 'Proceed' button...");

        // Print confirmation of successful login
        System.out.println("Login successful!");
    }
}
